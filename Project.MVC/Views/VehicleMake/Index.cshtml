@model Project.MVC.ViewModels.VehicleMakeView
<a href="@Url.Action("Create", "VehicleMake")" class="btn btn-primary">Create New</a>
<h1>Vehicle makes</h1>
@using (Html.BeginForm("Index", "VehicleMake", FormMethod.Get))
{
    <div class="form-group">
        @Html.LabelFor(model => model.sort.Filter)
        @Html.TextBoxFor(model => model.sort.Filter, new { @class = "form-control" })
    </div>
    <br />
    <button type="submit" class="btn btn-primary">Filter</button>
}

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortby="Name" asp-route-sortorder="@(Model.sort.SortBy == "Name" && Model.sort.SortOrder == "asc" ? "desc" : "asc")">Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortby="Abrv" asp-route-sortorder="@(Model.sort.SortBy == "Abrv" && Model.sort.SortOrder == "asc" ? "desc" : "asc")">Abrv</a>
            </th>
            <th>
                <a>Delete</a>
            </th>
            <th>
                <a>Update</a>
            </th>
 
        </tr>
    </thead>
    <tbody>
        @foreach (var make in Model.Makes)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => make.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => make.Abrv)
                </td>
                <td>
                    <form asp-controller="VehicleMake" asp-action="DeleteVehicle" method="post">
                        <input type="hidden" name="id" value="@make.Id" /> 
                        <button class="btn btn-primary" type="submit" onclick="return confirm('Are you sure you want to delete?')">Delete</button>
                    </form>
                </td>
                <td>
                    <a href="@Url.Action("Edit", "VehicleMake", new { id = make.Id })" class="btn btn-primary">Edit</a>
                </td>

            </tr>
        }
    </tbody>
</table>
@if (Model.PaginationInfo.TotalPages > 1)
{
    <ul class="pagination">
        @if (Model.PaginationInfo.CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PaginationInfo.CurrentPage - 1)" asp-route-filter="@(Model.sort.Filter)" asp-route-sortby="@(Model.sort.SortBy)" asp-route-sortorder="@(Model.sort.SortOrder)">Previous</a>
            </li>
        }

        @for (int i = 1; i <= Model.PaginationInfo.TotalPages; i++)
        {
            <li class="page-item @(i == Model.PaginationInfo.CurrentPage ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@i" asp-route-filter="@(Model.sort.Filter)" asp-route-sortby="@(Model.sort.SortBy)" asp-route-sortorder="@(Model.sort.SortOrder)">@i</a>
            </li>
        }

        @if (Model.PaginationInfo.CurrentPage < Model.PaginationInfo.TotalPages)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PaginationInfo.CurrentPage + 1)" asp-route-filter="@(Model.sort.Filter)" asp-route-sortby="@(Model.sort.SortBy)" asp-route-sortorder="@(Model.sort.SortOrder)">NEXT</a>
            </li>
        }
    </ul>
}
